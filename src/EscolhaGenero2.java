import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.jpl7.Query;
import sb.Ligacao;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author User
 */
public class EscolhaGenero2 extends javax.swing.JFrame {
        
    static String asserts;
    static String tipo;
    static String genero;
    /**
     * Creates new form EscolhaGenero2
     */
    public EscolhaGenero2(String asserts, String tipo, String genero) {
        initComponents();
        this.asserts=asserts;
        this.tipo=tipo;
        this.genero=genero;
        this.setSize(500, 400);

        // Não permite o redimensionamento da janela
        this.setResizable(false);

        // Mostra a centralização da janela
        this.setLocationRelativeTo(null);
        
        buttonGroup1.add(Opcao1);
        buttonGroup1.add(Opcao2);
        buttonGroup1.add(Opcao3);
        buttonGroup1.add(Opcao4);
        
        if(tipo.equals("filme") && genero.equals("Terror, Mistério, Ficçao cientifica")){
        Opcao1.setText("Abigail Haunting"); //Terror
        Opcao2.setText("Spenser Confidential"); //Mistério, Crime, Drama
        Opcao3.setText("Transference: Escape the Dark"); //Ficção Cientifica
        Opcao4.setText("Them That Follow"); //Suspense, Thriller
        }
        if((tipo.equals("filme") || tipo.equals("indiferente")) && genero.equals("Animação, Familia, Comédia, Aventura, Música")){
        Opcao1.setText("A voz do silencio: Koe no Katachi"); //Animes, Fantasia, Romance
        Opcao2.setText("Moana"); //Animação, Aventura
        Opcao3.setText("Aladin"); //Familia, Aventura, Comédia
        Opcao4.setText("A Bela e o Monstro"); //Música, Fantasia, Familia
        }
        if(tipo.equals("filme") && genero.equals("Ação, Romance, Drama")){
        Opcao1.setText("Deadpool"); //Ação, Comédia, Aventura
        Opcao2.setText("A Banca dos Beijos"); //Romance, Comédia
        Opcao3.setText("Joker"); //Drama, Crime, Thriller
        Opcao4.setText("Aonde é que Pára a Polícia 33 1/3 - O Insulto Final"); //Policial, Comédia, Crime
        }
        if((tipo.equals("filme") || tipo.equals("indiferente")) && genero.equals("Documentário, História, Guerra")){
        Opcao1.setText("Fyre"); //Documentário
        Opcao2.setText("Elementos Secretos"); //História, Biografia, Drama
        Opcao3.setText("Longe dos Homens"); //Guerra, Faroeste, Drama
        Opcao4.setText("Creed"); //Desporto, Drama
        }
        if((tipo.equals("serie") || tipo.equals("indiferente")) && genero.equals("Drama, Terror, Thriller, Ficção Científica")){
        Opcao1.setText("Home Before Dark"); //Drama, Mistério
        Opcao2.setText("The Haunting of Hill House"); //Terror
        Opcao3.setText("Westworld"); //Ficção Cientifica, Thriller
        Opcao4.setText("The Venture Bros"); //Animação, Comédia, Ficção Científica
        }
        if((tipo.equals("serie") || tipo.equals("indiferente")) && genero.equals("Ação, Crime e Mistério, Romance, Policial")){
        Opcao1.setText("Batman: The Animated Series"); //Animação, Ação, Aventura
        Opcao2.setText("Peaky Blinders"); //Crime, Drama
        Opcao3.setText("The Expanse"); //Drama, Ficção Científica, Mistério
        Opcao4.setText("Friends"); //Romance, Comédia
        }
        if(tipo.equals("serie") && genero.equals("Documentário, História, Guerra")){
        Opcao1.setText("Tiger King"); //Crime, Documentário
        Opcao2.setText("Rome"); //Ação, Drama, História
        Opcao3.setText("'Allo 'Allo!"); //Guerra, Comédia
        Opcao4.setText(""); 
        }
        if(tipo.equals("serie") && genero.equals("Animação, Comédia,  Música")){
        Opcao1.setText("Hilda"); //Animação, Aventura, Família
        Opcao2.setText("Friends"); //Comédia, Romance
        Opcao3.setText("Os Filhos do rock"); //Música, História
        Opcao4.setText(""); 
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        Opcao1 = new javax.swing.JRadioButton();
        Opcao2 = new javax.swing.JRadioButton();
        Opcao3 = new javax.swing.JRadioButton();
        Opcao4 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aaaaaaa.png"))); // NOI18N

        jButton1.setText("Seguinte");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Com qual destas opções se identifica mais?");

        Opcao1.setText("Opção1");
        Opcao1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Opcao1ActionPerformed(evt);
            }
        });

        Opcao2.setText("Opção2");

        Opcao3.setText("Opção3");

        Opcao4.setText("Opção4");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("Faça a sua escolha!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 192, Short.MAX_VALUE)
                        .addComponent(jLabel4)))
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Opcao2)
                            .addComponent(Opcao1)
                            .addComponent(Opcao4)
                            .addComponent(Opcao3))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel1)))
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addGap(29, 29, 29)
                .addComponent(Opcao1)
                .addGap(18, 18, 18)
                .addComponent(Opcao2)
                .addGap(18, 18, 18)
                .addComponent(Opcao3)
                .addGap(18, 18, 18)
                .addComponent(Opcao4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        Ligacao li = new Ligacao("bc.pl");
        String opcao = "";

        // asserts = "assert(fact("+ tipo +")), assert(fact(nota_boa)), assert(fact(recente)),";

        if(!(Opcao1.isSelected() || Opcao2.isSelected() || Opcao3.isSelected() || Opcao4.isSelected())){
            JOptionPane.showMessageDialog(new JFrame(), "Selecione uma opcão!","Erro", JOptionPane.ERROR_MESSAGE);
        }
        else{
            if(Opcao1.isSelected()){
                opcao = Opcao1.getText();
                if(opcao.equals("Abigail Haunting")){
                    this.asserts += "assert(fact(terror))";
                }
                if(opcao.equals("A voz do silencio: Koe no Katachi")){
                    this.asserts += "assert(fact(animes)), assert(fact(fantasia)), assert(fact(romance))";
                }
                if(opcao.equals("Deadpool")){
                    this.asserts += "assert(fact(acao)), assert(fact(comedia)), assert(fact(aventura))";
                }
                if(opcao.equals("Fyre")){
                    this.asserts += "assert(fact(documentario))";
                }
                if(opcao.equals("Home Before Dark")){
                    this.asserts += "assert(fact(drama)), assert(fact(misterio))";
                }
                if(opcao.equals("Batman: The Animated Series")){
                    this.asserts += "assert(fact(animacao)), assert(fact(acao)), assert(fact(aventura))";
                }
                if(opcao.equals("Tiger King")){
                    this.asserts += "assert(fact(crime)), assert(fact(documentario))";
                }
                if(opcao.equals("Hilda")){
                    this.asserts += "assert(fact(animacao)), assert(fact(aventura)), assert(fact(familia))";
                }
             }else if(Opcao2.isSelected()){
                opcao = Opcao2.getText();
                if(opcao.equals("Spenser Confidential")){
                    this.asserts += "assert(fact(misterio)), assert(fact(crime)), assert(fact(drama))";
                }
                if(opcao.equals("Moana")){
                    this.asserts += "assert(fact(animacao)), assert(fact(aventura))";
                }
                if(opcao.equals("A Banca dos Beijos")){
                    this.asserts += "assert(fact(romance)), assert(fact(comedia))";
                }
                if(opcao.equals("Elementos Secretos")){
                    this.asserts += "assert(fact(historia)), assert(fact(biografia)), assert(fact(drama))";
                }
                if(opcao.equals("The Haunting of Hill House")){
                    this.asserts += "assert(fact(terror))";
                }
                if(opcao.equals("Peaky Blinders")){
                    this.asserts += "assert(fact(crime)), assert(fact(drama))";
                }
                if(opcao.equals("Rome")){
                    this.asserts += "assert(fact(acao)), assert(fact(historia)), assert(fact(drama))";
                }
                if(opcao.equals("Friends")){
                    this.asserts += "assert(fact(comedia)), assert(fact(romance))";
                }
             }else if(Opcao3.isSelected()){
                opcao = Opcao3.getText();
                if(opcao.equals("Transference: Escape the Dark")){
                    asserts += "assert(fact(ficcaoCientifica))";
                }
                if(opcao.equals("Aladin")){
                    asserts += "assert(fact(aventura)), assert(fact(comedia)), assert(fact(familia))";   
                }
                if(opcao.equals("Joker")){
                    asserts += "assert(fact(crime)), assert(fact(drama)), assert(fact(thriller))"; 
                }
                if(opcao.equals("Longe dos Homens")){
                    asserts += "assert(fact(guerra)), assert(fact(drama)), assert(fact(faroeste))"; 
                }
                if(opcao.equals("Westworld")){
                    asserts += "assert(fact(thriller)), assert(fact(ficcaoCientifica))";  
                }
                if(opcao.equals("The Expanse")){
                    asserts += "assert(fact(drama)), assert(fact(ficcaoCientifica)), assert(fact(misterio))";   
                }
                if(opcao.equals("'Allo 'Allo!")){
                    asserts += "assert(fact(comedia)), assert(fact(guerra))";
                }
                if(opcao.equals("Os Filhos do rock")){
                    asserts += "assert(fact(historia), assert(fact(musica))";
                }
            }else if(Opcao4.isSelected()){
                opcao = Opcao4.getText();
                if(opcao.equals("Them That Follow")){
                    this.asserts += "assert(fact(suspense)), assert(fact(thriller))";
                }
                if(opcao.equals("A Bela e o Monstro")){
                    this.asserts += "assert(fact(musica)), assert(fact(fantasia)), assert(fact(familia))";
                }
                if(opcao.equals("Aonde é que Pára a Polícia 33 1/3 - O Insulto Final")){
                    this.asserts += "assert(fact(policial)), assert(fact(comedia)), assert(fact(crime))";
                }
                 if(opcao.equals("Creed")){
                    this.asserts += "assert(fact(desporto)), assert(fact(drama))";
                }
                if(opcao.equals("The Venture Bros")){
                    this.asserts += "assert(fact(animacao)), assert(fact(comedia)), assert(fact(ficcaoCientifica))";
                }
                if(opcao.equals("Friends")){
                    this.asserts += "assert(fact(romance)), assert(fact(comedia))";
                }
                if(opcao.equals("Abigail Haunting")){
                    this.asserts += "assert(fact(terror))";
                }
                if(opcao.equals("Abigail Haunting")){
                    this.asserts += "assert(fact(terror))";
                }
            }
            
            System.out.println(asserts.toString());
            /* Query q1 = new Query(asserts + ", obtem(P)");
            System.out.println(q1.toString());
            q1.hasSolution();
            q1.close();*/

            Preferidos res = null;
            try {
                res = new Preferidos(asserts);
            } catch (IOException ex) {
                Logger.getLogger(Escolha.class.getName()).log(Level.SEVERE, null, ex);
            }
            res.setVisible(true);
            this.setVisible(false);
        
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void Opcao1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Opcao1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Opcao1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main1(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EscolhaGenero2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EscolhaGenero2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EscolhaGenero2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EscolhaGenero2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new EscolhaGenero2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Opcao1;
    private javax.swing.JRadioButton Opcao2;
    private javax.swing.JRadioButton Opcao3;
    private javax.swing.JRadioButton Opcao4;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
